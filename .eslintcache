[{"D:\\ecommerce\\src\\index.js":"1","D:\\ecommerce\\src\\App.js":"2","D:\\ecommerce\\src\\components\\Products\\Products.jsx":"3","D:\\ecommerce\\src\\components\\Products\\Product\\Product.jsx":"4","D:\\ecommerce\\src\\components\\Products\\Product\\styles.js":"5","D:\\ecommerce\\src\\components\\Navbar\\Navbar.jsx":"6","D:\\ecommerce\\src\\components\\Navbar\\styles.js":"7","D:\\ecommerce\\src\\components\\index.js":"8","D:\\ecommerce\\src\\lib\\commerce.js":"9","D:\\ecommerce\\src\\components\\Products\\styles.js":"10","D:\\ecommerce\\src\\components\\Cart\\Cart.jsx":"11","D:\\ecommerce\\src\\components\\Cart\\styles.js":"12","D:\\ecommerce\\src\\components\\Cart\\CartItem\\CartItem.jsx":"13","D:\\ecommerce\\src\\components\\Cart\\CartItem\\styles.js":"14","D:\\ecommerce\\src\\components\\CheckoutForm\\Checkout\\Checkout.jsx":"15","D:\\ecommerce\\src\\components\\CheckoutForm\\Checkout\\styles.js":"16","D:\\ecommerce\\src\\components\\CheckoutForm\\PaymentForm.jsx":"17","D:\\ecommerce\\src\\components\\CheckoutForm\\AddressForm.jsx":"18","D:\\ecommerce\\src\\components\\CheckoutForm\\CustomTextField.jsx":"19","D:\\ecommerce\\src\\components\\CheckoutForm\\Review.jsx":"20"},{"size":151,"mtime":1607023721691,"results":"21","hashOfConfig":"22"},{"size":3033,"mtime":1607646968768,"results":"23","hashOfConfig":"22"},{"size":720,"mtime":1607111233165,"results":"24","hashOfConfig":"22"},{"size":1332,"mtime":1612491651310,"results":"25","hashOfConfig":"22"},{"size":407,"mtime":1612491616376,"results":"26","hashOfConfig":"22"},{"size":1482,"mtime":1607462166229,"results":"27","hashOfConfig":"22"},{"size":1631,"mtime":1607028225347,"results":"28","hashOfConfig":"22"},{"size":240,"mtime":1607280989080,"results":"29","hashOfConfig":"22"},{"size":131,"mtime":1607030445230,"results":"30","hashOfConfig":"22"},{"size":299,"mtime":1607110623167,"results":"31","hashOfConfig":"22"},{"size":2190,"mtime":1612493869561,"results":"32","hashOfConfig":"22"},{"size":605,"mtime":1612493756018,"results":"33","hashOfConfig":"22"},{"size":1295,"mtime":1607279535089,"results":"34","hashOfConfig":"22"},{"size":405,"mtime":1612491956262,"results":"35","hashOfConfig":"22"},{"size":3885,"mtime":1607647006733,"results":"36","hashOfConfig":"22"},{"size":1208,"mtime":1607280877060,"results":"37","hashOfConfig":"22"},{"size":3039,"mtime":1607461756890,"results":"38","hashOfConfig":"22"},{"size":5521,"mtime":1607396332942,"results":"39","hashOfConfig":"22"},{"size":602,"mtime":1607461061997,"results":"40","hashOfConfig":"22"},{"size":1097,"mtime":1607393469347,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"6k322b",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},"D:\\ecommerce\\src\\index.js",[],["86","87"],"D:\\ecommerce\\src\\App.js",[],"D:\\ecommerce\\src\\components\\Products\\Products.jsx",[],"D:\\ecommerce\\src\\components\\Products\\Product\\Product.jsx",[],"D:\\ecommerce\\src\\components\\Products\\Product\\styles.js",[],"D:\\ecommerce\\src\\components\\Navbar\\Navbar.jsx",[],"D:\\ecommerce\\src\\components\\Navbar\\styles.js",[],"D:\\ecommerce\\src\\components\\index.js",[],"D:\\ecommerce\\src\\lib\\commerce.js",[],"D:\\ecommerce\\src\\components\\Products\\styles.js",[],"D:\\ecommerce\\src\\components\\Cart\\Cart.jsx",[],"D:\\ecommerce\\src\\components\\Cart\\styles.js",[],"D:\\ecommerce\\src\\components\\Cart\\CartItem\\CartItem.jsx",[],"D:\\ecommerce\\src\\components\\Cart\\CartItem\\styles.js",[],"D:\\ecommerce\\src\\components\\CheckoutForm\\Checkout\\Checkout.jsx",["88"],"import React, { useState, useEffect } from 'react';\r\nimport { Paper, Stepper, Step, StepLabel, Typography, CircularProgress, Divider, Button, CssBaseline } from '@material-ui/core';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nimport { commerce } from '../../../lib/commerce'\r\nimport useStyles from './styles';\r\nimport AddressForm from '../AddressForm';\r\nimport PaymentForm from '../PaymentForm';\r\n\r\nconst steps= ['Shipping adress', 'Payment details']\r\n\r\n\r\nexport default function Checkout({ cart, order, onCaptureCheckout, error }) {\r\n    const [activeStep, setActiveStep] = useState(0);\r\n    const [checkoutToken, setCheckoutToken] = useState(null);\r\n    const [shippingData, setShippingData] = useState({});\r\n    const [isFinished, setIsFinished] = useState(false);\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        const generateToken = async () => {\r\n            try {\r\n                const token = await commerce.checkout.generateToken(cart.id, { type: 'cart' })\r\n\r\n                console.log(token);\r\n\r\n                setCheckoutToken(token);\r\n            } catch(error){\r\n                history.pushState('/');\r\n            }\r\n        }\r\n        generateToken();\r\n    }, [cart])\r\n\r\n    const nextStep = () => setActiveStep((prevActiveStep) => prevActiveStep + 1)\r\n    const backStep = () => setActiveStep((prevActiveStep) => prevActiveStep - 1)\r\n\r\n    const next = (data) => {\r\n        setShippingData(data);\r\n\r\n        nextStep();\r\n    }\r\n\r\n    const timeout = () => {\r\n        setTimeout(() => {\r\n            setIsFinished(true)\r\n        }, 3000)\r\n    }\r\n\r\n    let Confirmation = () => order.customer ? (\r\n        <>\r\n            <div>\r\n    <Typography variant=\"h5\">Thank you for your purchase, {order.customer.firstname} {order.customer.lastname}</Typography>\r\n                <Divider className={classes.divider} />\r\n    <Typography variant=\"subtitle2\">Order ref: {order.customer_reference}</Typography>\r\n            </div>\r\n            <br />\r\n            <Button component={Link} to='/' variant=\"outlined\">Back to Home</Button>\r\n        </>\r\n    ) : isFinished ? (\r\n        <>\r\n            <div>\r\n                <Typography variant=\"h5\">Thank you for your purchase</Typography>\r\n                <Divider className={classes.divider} />\r\n            </div>\r\n            <br />\r\n            <Button component={Link} to='/' variant=\"outlined\">Back to Home</Button>\r\n        </>    \r\n    ) : (\r\n        <div className={classes.spinner}>\r\n            <CircularProgress />\r\n        </div>\r\n    )\r\n\r\n    if (error) {\r\n        <>\r\n            <Typography variant=\"h5\">Error: {error}</Typography>\r\n            <br />\r\n            <Button component={Link} to='/' variant=\"outlined\">Back to Home</Button>\r\n        </>\r\n    }\r\n\r\n    const Form = () => activeStep === 0\r\n        ? <AddressForm checkoutToken={checkoutToken} next={next} />\r\n        : <PaymentForm shippingData={shippingData} checkoutToken={checkoutToken} nextStep={nextStep} backStep={backStep} onCaptureCheckout={onCaptureCheckout} timeout={timeout} />\r\n\r\n    return (\r\n        <>\r\n            <CssBaseline />\r\n            <div className={classes.toolbar} />\r\n            <main className={classes.layout}>\r\n                <Paper className={classes.paper}>\r\n                    <Typography variant=\"h4\" align=\"center\">Checkout</Typography>\r\n                    <Stepper activeStep={activeStep} className={classes.stepper}>\r\n                        {steps.map((step) => (\r\n                            <Step key={step}>\r\n                                <StepLabel>{step}</StepLabel>\r\n                            </Step>\r\n                        ))}\r\n                    </Stepper>\r\n                    {activeStep === steps.length ? <Confirmation /> : checkoutToken && <Form />}\r\n                </Paper>\r\n            </main>\r\n        </>\r\n    )\r\n}\r\n","D:\\ecommerce\\src\\components\\CheckoutForm\\Checkout\\styles.js",[],"D:\\ecommerce\\src\\components\\CheckoutForm\\PaymentForm.jsx",[],"D:\\ecommerce\\src\\components\\CheckoutForm\\AddressForm.jsx",["89","90"],"import React, { useState, useEffect } from 'react'\r\nimport { InputLabel, Select, MenuItem, Button, Grid, Typography } from '@material-ui/core';\r\nimport { useForm, FormProvider } from 'react-hook-form';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { commerce } from '../../lib/commerce';\r\n\r\nimport FormInput from './CustomTextField';\r\n\r\nexport default function AddressForm( { checkoutToken, next }) {\r\n    const [shippingCountries, setShippingCountries] = useState([]);\r\n    const [shippingCountry, setShippingCountry] = useState('');\r\n    const [shippingSubdivisions, setShippingSubdivisions] = useState([]);\r\n    const [shippingSubdivision, setShippingSubdivision] = useState('');\r\n    const [shippingOptions, setShippingOptions] = useState([]);\r\n    const [shippingOption, setShippingOption] = useState('');\r\n\r\n    const methods = useForm();\r\n    \r\n    const countries = Object.entries(shippingCountries).map(([code, name]) => ({ id: code, label: name}))\r\n    const subdivisions = Object.entries(shippingSubdivisions).map(([code, name]) => ({ id: code, label: name}))\r\n    const options = shippingOptions.map((sO) => ({ id: sO.id, label: `${sO.description} - (${sO.price.formatted_with_symbol})` }))\r\n\r\n    console.log(shippingOptions)\r\n    const fetchShippingCountries = async (checkoutTokenId) => {\r\n        const { countries } = await commerce.services.localeListShippingCountries(checkoutTokenId)\r\n        setShippingCountries(countries);\r\n        setShippingCountry(Object.keys(countries)[0]);\r\n    }\r\n\r\n    const fetchSubdivisions = async (countryCode) => {\r\n        const{ subdivisions } = await commerce.services.localeListSubdivisions(countryCode)\r\n\r\n        setShippingSubdivisions(subdivisions);\r\n        setShippingSubdivision(Object.keys(subdivisions)[0]);\r\n    }\r\n\r\n    const fetchShippingOptions = async (checkoutTokenId, country, region = null) => {\r\n        const options = await commerce.checkout.getShippingOptions(checkoutTokenId, { country, region});\r\n\r\n        setShippingOptions(options);\r\n        setShippingOption(options[0].id);\r\n    }\r\n    \r\n    useEffect(() => {\r\n        fetchShippingCountries(checkoutToken.id)\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (shippingCountry) fetchSubdivisions(shippingCountry)\r\n    }, [shippingCountry]);\r\n\r\n    useEffect(() => {\r\n        if(shippingSubdivision) fetchShippingOptions(checkoutToken.id, shippingCountry, shippingSubdivision);\r\n    }, [shippingSubdivision])\r\n   \r\n\r\n    return (\r\n        <>\r\n            <Typography variant=\"h6\" gutterBottom>Shipping Address</Typography>\r\n            <FormProvider {...methods}>\r\n                <form onSubmit={methods.handleSubmit((data) => next({ ...data, shippingCountry, shippingSubdivision, shippingOption }) )}>\r\n                    <Grid container spacing={3}>\r\n                        <FormInput name=\"firstName\" label=\"First name\" />\r\n                        <FormInput name=\"lastName\" label=\"Last name\" />\r\n                        <FormInput name=\"address1\" label=\"Address\" />\r\n                        <FormInput name=\"email\" label=\"Email\" />\r\n                        <FormInput name=\"city\" label=\"City\" />\r\n                        <FormInput name=\"zip\" label=\"ZIP / Postal Code\" />\r\n                        <Grid item xs={12} sm={6}>\r\n                            <InputLabel>Shipping Country</InputLabel>\r\n                            <Select value={shippingCountry} fullWidth onChange={(e) => setShippingCountry(e.target.value)}>\r\n                                {countries.map((country) => (\r\n                                    <MenuItem key={country.id} value={country.id}>\r\n                                        {country.label}\r\n                                    </MenuItem>\r\n                                ))} \r\n                            </Select>\r\n                        </Grid>\r\n                       <Grid item xs={12} sm={6}>\r\n                            <InputLabel>Shipping Subdivision</InputLabel>\r\n                            <Select value={shippingSubdivision} fullWidth onChange={(e) => setShippingSubdivision(e.target.value)}>\r\n                                {subdivisions.map((subdivision) => (\r\n                                    <MenuItem key={subdivision.id} value={subdivision.id}>\r\n                                        {subdivision.label}\r\n                                    </MenuItem>\r\n                                ))} \r\n                            </Select>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <InputLabel>Shipping Options</InputLabel>\r\n                            <Select value={shippingOption} fullWidth onChange={(e) => setShippingOption(e.target.value)}>\r\n                                {options.map((option) => (\r\n                                    <MenuItem key={option.id} value={option.id}>\r\n                                        {option.label}\r\n                                    </MenuItem>\r\n                                ))} \r\n                            </Select>\r\n                        </Grid> \r\n                    </Grid>\r\n                    <br />\r\n                    <div style={{ display:'flex', justifyContent:'space-between'}}>\r\n                        <Button component={Link} to='/cart' variant=\"outlined\">Back to Cart</Button>\r\n                        <Button type=\"submit\" variant=\"contained\" color=\"primary\">Next</Button>\r\n                    </div>\r\n                </form>\r\n            </FormProvider>\r\n        </>\r\n    )\r\n}\r\n","D:\\ecommerce\\src\\components\\CheckoutForm\\CustomTextField.jsx",[],"D:\\ecommerce\\src\\components\\CheckoutForm\\Review.jsx",[],["91","92"],{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":34,"column":8,"nodeType":"99","endLine":34,"endColumn":14,"suggestions":"100"},{"ruleId":"97","severity":1,"message":"101","line":47,"column":8,"nodeType":"99","endLine":47,"endColumn":10,"suggestions":"102"},{"ruleId":"97","severity":1,"message":"103","line":55,"column":8,"nodeType":"99","endLine":55,"endColumn":29,"suggestions":"104"},{"ruleId":"93","replacedBy":"105"},{"ruleId":"95","replacedBy":"106"},"no-native-reassign",["107"],"no-negated-in-lhs",["108"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["109"],"React Hook useEffect has a missing dependency: 'checkoutToken.id'. Either include it or remove the dependency array.",["110"],"React Hook useEffect has missing dependencies: 'checkoutToken.id' and 'shippingCountry'. Either include them or remove the dependency array.",["111"],["107"],["108"],"no-global-assign","no-unsafe-negation",{"desc":"112","fix":"113"},{"desc":"114","fix":"115"},{"desc":"116","fix":"117"},"Update the dependencies array to be: [cart, history]",{"range":"118","text":"119"},"Update the dependencies array to be: [checkoutToken.id]",{"range":"120","text":"121"},"Update the dependencies array to be: [checkoutToken.id, shippingCountry, shippingSubdivision]",{"range":"122","text":"123"},[1248,1254],"[cart, history]",[2158,2160],"[checkoutToken.id]",[2425,2446],"[checkoutToken.id, shippingCountry, shippingSubdivision]"]